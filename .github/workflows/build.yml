name: build
on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build site
      shell: pwsh
      run: |
        sed -i '/#local/d' _config.yml
        sed -i 's/#prod://g' _config.yml

        $pwd = pwd
        $uid = sh -c 'id -u'
        $gid = sh -c 'id -g'

        docker run --rm -v "$($pwd):/var/site-content" g3rv4/blog-builder bash -c "/root/.rbenv/shims/jekyll build && chown -R $($uid):$($gid) /var/site-content"
    - name: Package it
      shell: pwsh
      run: |
        $basePath = Pwd
        $sitePath = Join-Path $basePath _site

        cp "$($basePath)/onchro.me.nuspec" "$($sitePath)/onchro.me.nuspec"

        $nuspecPath = Join-Path $sitePath onchro.me.nuspec

        [xml]$xmlDoc = Get-Content $nuspecPath
        $versionElement = $xmlDoc['package']['metadata']['version']
        $version = [version]$versionElement.InnerText
        $newVersion = [version]"$($version.Major).$($version.Minor).$($env:GITHUB_RUN_NUMBER)"
        $newVersionStr = $newVersion.ToString()
        $versionElement.InnerText = $newVersionStr
        $xmlDoc.Save($nuspecPath)

        Compress-Archive -Path "$($sitePath)/*" -DestinationPath "$($basePath)/onchro.me.$($newVersionStr).nupkg"

        $nugetConfig = Get-Content nuget.config
        $nugetConfig = $nugetConfig.Replace("{username}", $env:GITHUB_ACTOR).Replace("{password}", "${{ secrets.GITHUB_TOKEN }}")
        Set-Content -Path nuget.config -Value $nugetConfig

        dotnet nuget push "$($basePath)/onchro.me.$($newVersionStr).nupkg" --source "github"